<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="structure.SimpleListUT" tests="29" skipped="0" failures="0" errors="0" timestamp="2020-06-05T18:59:50" hostname="yassine-PC" time="0.057">
  <properties/>
  <testcase name="get_list_0_when_abc_added_should_return_abc" classname="structure.SimpleListUT" time="0.041"/>
  <testcase name="index_of_abc_when_listStr_is_empty_should_return_negative_1" classname="structure.SimpleListUT" time="0.001"/>
  <testcase name="contains_def_when_list_already_initialized_should_return_false" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="simple_list_when_1_added_shouldnt_be_empty" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="add_jkl_at_idx_0_when_list_already_initialized_should_return_jkl" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="remove_element_at_idx_1_when_list_already_initialized_should_contains_1_3" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="add_10_at_idx_0_when_list_already_initialized_should_return_10" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="contains_2_when_list_already_initialized_should_return_true" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="remove_element_at_idx_1_when_list_already_initialized_should_contains_abc_ghi" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="to_string_when_list_is_empty_should_display_empty_list" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="contains_def_when_list_already_initialized_should_return_true" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="contains_2_when_list_is_empty_should_return_false" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="index_of_2_when_list_already_initialized_should_return_idx_1" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="index_of_2_when_list_is_empty_should_return_negative_1" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="add_10_at_idx_1_when_list_already_initialized_should_return_10" classname="structure.SimpleListUT" time="0.001"/>
  <testcase name="to_string_when_list_is_initialized_should_display_values" classname="structure.SimpleListUT" time="0.001"/>
  <testcase name="add_10_at_idx_1_when_list_has_only_single_element_should_throw_index_out_of_range_exception" classname="structure.SimpleListUT" time="0.003"/>
  <testcase name="index_of_ghi_when_listStr_already_initialized_return_negative_1" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="simple_list_when_just_initialized_should_be_empty" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="remove_element_at_idx_0_when_list_is_empty_should_throw_index_out_of_range_exception" classname="structure.SimpleListUT" time="0.001"/>
  <testcase name="index_of_99_when_list_already_initialized_should_return_negative_1" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="get_list_0_when_empty_list_should_throw_index_out_of_range_exception" classname="structure.SimpleListUT" time="0.001"/>
  <testcase name="contains_99_when_list_already_initialized_should_return_false" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="remove_element_at_idx_0_when_list_already_initialized_should_contains_def_ghi" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="index_of_def_when_list_already_initialized_should_return_idx_1" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="get_list_0_when_1_added_should_return_1" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="get_list_0_when_abc_def_ghi_added_should_return_abc_def_ghi" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="remove_element_at_idx_0_when_list_already_initialized_should_contains_2_3" classname="structure.SimpleListUT" time="0.0"/>
  <testcase name="get_list_0_when_1_2_3_added_should_return_1_2_3" classname="structure.SimpleListUT" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
